#debug = true

logLevel = "ERROR" #DEBUG, INFO, WARN, ERROR, FATAL, PANIC
InsecureSkipVerify = true
defaultEntryPoints = ["https", "http"]

#WEB interface of Traefik - it will show web page with overview of frontend and backend configurations 
[web]
address = ":8080"
  [web.auth.basic]
  usersFile = ".htpasswd"

[api]
  entryPoint = "traefik"
  dashboard = true
  address = ":8080"
  usersFile = ".htpasswd"

# Force HTTPS
[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
#    [entryPoints.https.auth.basic]
#    usersFile = "/shared/.htpasswd"  
    [entryPoints.https.tls]

# Let's encrypt configuration
[acme]
email = "jakkrit@ppsmartbot.com"
storage="acme.json"
entryPoint = "https"
# acmeLogging=true 
# caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
#   [acme.dnsChallenge]
#   provider = "digitalocean" # DNS Provider name (cloudflare, OVH, gandi...)
#   delayBeforeCheck = 0
# 
# [[acme.domains]]
#   main = "*.ppsmartbot.com"
# onDemand = true
# onHostRule = true
#     entryPoint = "http" #does not work with wildcard domains
onHostRule = true
  [acme.httpChallenge]
  entryPoint = "http"
   
# Connection to docker host system (docker.sock)
[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "ppsmartbot.com"
watch = true
# This will hide all docker containers that don't have explicitly  
# set label to "enable"
exposedbydefault = true
nwtwork = "traefik-proxy"
